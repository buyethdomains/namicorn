[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/ens/contract/deed.ts",
    "content": "import web3 from '../web3'\n\nexport default [\n  {\n    constant: true,\n    inputs: [],\n    name: 'creationDate',\n    outputs: [{name: '', type: 'uint256'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'destroyDeed',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'newOwner', type: 'address'}],\n    name: 'setOwner',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'registrar',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'value',\n    outputs: [{name: '', type: 'uint256'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'previousOwner',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'owner',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'newValue', type: 'uint256'},\n      {name: 'throwOnFailure', type: 'bool'},\n    ],\n    name: 'setBalance',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'refundRatio', type: 'uint256'}],\n    name: 'closeDeed',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'newRegistrar', type: 'address'}],\n    name: 'setRegistrar',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    inputs: [{name: '_owner', type: 'address'}],\n    payable: true,\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [{indexed: false, name: 'newOwner', type: 'address'}],\n    name: 'OwnerChanged',\n    type: 'event',\n  },\n  {anonymous: false, inputs: [], name: 'DeedClosed', type: 'event'},\n]\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/ens/contract/deed.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "file",
    "name": "src/ens/contract/ens.ts",
    "content": "import web3 from '../web3'\n\nexport default [\n  {\n    constant: true,\n    inputs: [{name: 'node', type: 'bytes32'}],\n    name: 'resolver',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: 'node', type: 'bytes32'}],\n    name: 'owner',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'node', type: 'bytes32'},\n      {name: 'label', type: 'bytes32'},\n      {name: 'owner', type: 'address'},\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'node', type: 'bytes32'}, {name: 'ttl', type: 'uint64'}],\n    name: 'setTTL',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: 'node', type: 'bytes32'}],\n    name: 'ttl',\n    outputs: [{name: '', type: 'uint64'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'node', type: 'bytes32'},\n      {name: 'resolver', type: 'address'},\n    ],\n    name: 'setResolver',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'node', type: 'bytes32'}, {name: 'owner', type: 'address'}],\n    name: 'setOwner',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'node', type: 'bytes32'},\n      {indexed: false, name: 'owner', type: 'address'},\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'node', type: 'bytes32'},\n      {indexed: true, name: 'label', type: 'bytes32'},\n      {indexed: false, name: 'owner', type: 'address'},\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'node', type: 'bytes32'},\n      {indexed: false, name: 'resolver', type: 'address'},\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'node', type: 'bytes32'},\n      {indexed: false, name: 'ttl', type: 'uint64'},\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n]\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/ens/contract/ens.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "src/ens/contract/registrar.ts",
    "content": "import web3 from '../web3'\n\nexport default [\n  {\n    constant: false,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'releaseDeed',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'getAllowedTime',\n    outputs: [{name: 'timestamp', type: 'uint256'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'unhashedName', type: 'string'}],\n    name: 'invalidateName',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {name: 'hash', type: 'bytes32'},\n      {name: 'owner', type: 'address'},\n      {name: 'value', type: 'uint256'},\n      {name: 'salt', type: 'bytes32'},\n    ],\n    name: 'shaBid',\n    outputs: [{name: 'sealedBid', type: 'bytes32'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'bidder', type: 'address'},\n      {name: 'seal', type: 'bytes32'},\n    ],\n    name: 'cancelBid',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'entries',\n    outputs: [\n      {name: '', type: 'uint8'},\n      {name: '', type: 'address'},\n      {name: '', type: 'uint256'},\n      {name: '', type: 'uint256'},\n      {name: '', type: 'uint256'},\n    ],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ens',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: '_hash', type: 'bytes32'},\n      {name: '_value', type: 'uint256'},\n      {name: '_salt', type: 'bytes32'},\n    ],\n    name: 'unsealBid',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'transferRegistrars',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: '', type: 'address'}, {name: '', type: 'bytes32'}],\n    name: 'sealedBids',\n    outputs: [{name: '', type: 'address'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'state',\n    outputs: [{name: '', type: 'uint8'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: '_hash', type: 'bytes32'},\n      {name: 'newOwner', type: 'address'},\n    ],\n    name: 'transfer',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {name: '_hash', type: 'bytes32'},\n      {name: '_timestamp', type: 'uint256'},\n    ],\n    name: 'isAllowed',\n    outputs: [{name: 'allowed', type: 'bool'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'finalizeAuction',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'registryStarted',\n    outputs: [{name: '', type: 'uint256'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'launchLength',\n    outputs: [{name: '', type: 'uint32'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'sealedBid', type: 'bytes32'}],\n    name: 'newBid',\n    outputs: [],\n    payable: true,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: 'labels', type: 'bytes32[]'}],\n    name: 'eraseNode',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: '_hashes', type: 'bytes32[]'}],\n    name: 'startAuctions',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'hash', type: 'bytes32'},\n      {name: 'deed', type: 'address'},\n      {name: 'registrationDate', type: 'uint256'},\n    ],\n    name: 'acceptRegistrarTransfer',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [{name: '_hash', type: 'bytes32'}],\n    name: 'startAuction',\n    outputs: [],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'rootNode',\n    outputs: [{name: '', type: 'bytes32'}],\n    payable: false,\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {name: 'hashes', type: 'bytes32[]'},\n      {name: 'sealedBid', type: 'bytes32'},\n    ],\n    name: 'startAuctionsAndBid',\n    outputs: [],\n    payable: true,\n    type: 'function',\n  },\n  {\n    inputs: [\n      {name: '_ens', type: 'address'},\n      {name: '_rootNode', type: 'bytes32'},\n      {name: '_startDate', type: 'uint256'},\n    ],\n    payable: false,\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: false, name: 'registrationDate', type: 'uint256'},\n    ],\n    name: 'AuctionStarted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: true, name: 'bidder', type: 'address'},\n      {indexed: false, name: 'deposit', type: 'uint256'},\n    ],\n    name: 'NewBid',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: true, name: 'owner', type: 'address'},\n      {indexed: false, name: 'value', type: 'uint256'},\n      {indexed: false, name: 'status', type: 'uint8'},\n    ],\n    name: 'BidRevealed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: true, name: 'owner', type: 'address'},\n      {indexed: false, name: 'value', type: 'uint256'},\n      {indexed: false, name: 'registrationDate', type: 'uint256'},\n    ],\n    name: 'HashRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: false, name: 'value', type: 'uint256'},\n    ],\n    name: 'HashReleased',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {indexed: true, name: 'hash', type: 'bytes32'},\n      {indexed: true, name: 'name', type: 'string'},\n      {indexed: false, name: 'value', type: 'uint256'},\n      {indexed: false, name: 'registrationDate', type: 'uint256'},\n    ],\n    name: 'HashInvalidated',\n    type: 'event',\n  },\n]\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/ens/contract/registrar.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "file",
    "name": "src/ens/contract/resolver.ts",
    "content": "import web3 from '../web3'\n\nexport default [\n  {\n    inputs: [\n      {\n        name: 'ensAddr',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'AddrChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'NameChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        name: 'contentType',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABIChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PubkeyChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'indexedKey',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'TextChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'ContenthashChanged',\n    type: 'event',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setContenthash',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'contentType',\n        type: 'uint256',\n      },\n      {\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setABI',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPubkey',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'key',\n        type: 'string',\n      },\n      {\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'setText',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'text',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'pubkey',\n    outputs: [\n      {\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        name: 'contentTypes',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABI',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n      {\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function',\n  },\n]\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/ens/contract/resolver.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4,
    "kind": "file",
    "name": "src/ens/web3.ts",
    "content": "//import Web3 from 'web3'\n\nconst Web3 = require('web3')\n\nexport default new Web3('wss://mainnet.infura.io/ws')\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/ens/web3.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "Web3",
    "memberof": "src/ens/web3.ts",
    "static": true,
    "longname": "src/ens/web3.ts~Web3",
    "access": "public",
    "export": false,
    "importPath": "namicorn/src/ens/web3.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 6,
    "kind": "file",
    "name": "src/index.ts",
    "content": "import Namicorn from './Namicorn';\nexport { Namicorn, Namicorn as default };\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "src/zns/namehash.test.ts",
    "content": "import namehash from './namehash'\n\nit('should allow to specify parent', async () => {\n  const one = namehash(\"hello.zil\")\n  const two = namehash(\"hello\", {parent: namehash('zil')})\n  expect(one).toEqual(two)\n});\n\nit('should hash empty name', async () => {\n  expect(namehash('')).toEqual('0x0000000000000000000000000000000000000000000000000000000000000000')\n});\n\nit('should zil zone', async () => {\n  expect(namehash('zil')).toEqual('0x9915d0456b878862e822e2361da37232f626a2e47505c8795134a95d36138ed3')\n});\nit('should label.zil', async () => {\n  expect(namehash('label1.zil')).toEqual('0xcdd867def9a6228893521bc9ee5f2c69ed1481f5795defe7ae7683276e3b9c64')\n});\n\nit('should support no prefix', async () => {\n  expect(namehash('', {prefix: false})).toEqual('0000000000000000000000000000000000000000000000000000000000000000')\n});\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/zns/namehash.test.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "file",
    "name": "src/zns/namehash.ts",
    "content": "import sha3 from './sha3'\n\nexport default (name = '', { parent = null, prefix = true } = {}) => {\n  parent = parent || '0000000000000000000000000000000000000000000000000000000000000000'\n  if (parent.match(/^0x/)) {\n    parent = parent.substr(2)\n  }\n  const address = [parent]\n    .concat(\n      name\n      .split('.')\n      .reverse()\n      .filter(label => label)\n      .map(label => sha3(label, {hexPrefix: false})),\n    )\n    .reduce((a, labelHash) =>\n      sha3(a + labelHash, {hexPrefix: false, inputEnc: 'hex'}),\n    )\n  return prefix ? '0x' + address : address;\n}\n",
    "static": true,
    "longname": "/Users/johhny/namicorn/src/zns/namehash.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 9,
    "kind": "function",
    "name": "namehash",
    "memberof": "src/zns/namehash.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/zns/namehash.ts~namehash",
    "access": "public",
    "export": true,
    "importPath": "namicorn/src/zns/namehash.ts",
    "importStyle": "namehash",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      },
      {
        "name": "objectPattern1",
        "optional": true,
        "types": [
          "{\"parent\": *, \"prefix\": *}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# namicorn\n\nA library for interacting with blockchain domain names.\nSupported domain zones:\n\n* .zil \n* .eth \n* .etcetera\n\n[Documentation](https://docs.unstoppabledomains.com/#tag/namicorn)\n",
    "longname": "/Users/johhny/namicorn/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  }
]